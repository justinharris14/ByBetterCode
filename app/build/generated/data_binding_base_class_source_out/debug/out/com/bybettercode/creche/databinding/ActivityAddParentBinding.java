// Generated by view binder compiler. Do not edit!
package com.bybettercode.creche.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bybettercode.creche.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddParentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnAddChild;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnSaveParent;

  @NonNull
  public final TextInputEditText etParentEmail;

  @NonNull
  public final TextInputEditText etParentIdNumber;

  @NonNull
  public final TextInputEditText etParentName;

  @NonNull
  public final TextInputEditText etParentPhone;

  @NonNull
  public final RecyclerView recyclerTempChildren;

  private ActivityAddParentBinding(@NonNull ScrollView rootView, @NonNull Button btnAddChild,
      @NonNull MaterialButton btnCancel, @NonNull MaterialButton btnSaveParent,
      @NonNull TextInputEditText etParentEmail, @NonNull TextInputEditText etParentIdNumber,
      @NonNull TextInputEditText etParentName, @NonNull TextInputEditText etParentPhone,
      @NonNull RecyclerView recyclerTempChildren) {
    this.rootView = rootView;
    this.btnAddChild = btnAddChild;
    this.btnCancel = btnCancel;
    this.btnSaveParent = btnSaveParent;
    this.etParentEmail = etParentEmail;
    this.etParentIdNumber = etParentIdNumber;
    this.etParentName = etParentName;
    this.etParentPhone = etParentPhone;
    this.recyclerTempChildren = recyclerTempChildren;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddParentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddParentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_parent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddParentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddChild;
      Button btnAddChild = ViewBindings.findChildViewById(rootView, id);
      if (btnAddChild == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSaveParent;
      MaterialButton btnSaveParent = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveParent == null) {
        break missingId;
      }

      id = R.id.etParentEmail;
      TextInputEditText etParentEmail = ViewBindings.findChildViewById(rootView, id);
      if (etParentEmail == null) {
        break missingId;
      }

      id = R.id.etParentIdNumber;
      TextInputEditText etParentIdNumber = ViewBindings.findChildViewById(rootView, id);
      if (etParentIdNumber == null) {
        break missingId;
      }

      id = R.id.etParentName;
      TextInputEditText etParentName = ViewBindings.findChildViewById(rootView, id);
      if (etParentName == null) {
        break missingId;
      }

      id = R.id.etParentPhone;
      TextInputEditText etParentPhone = ViewBindings.findChildViewById(rootView, id);
      if (etParentPhone == null) {
        break missingId;
      }

      id = R.id.recyclerTempChildren;
      RecyclerView recyclerTempChildren = ViewBindings.findChildViewById(rootView, id);
      if (recyclerTempChildren == null) {
        break missingId;
      }

      return new ActivityAddParentBinding((ScrollView) rootView, btnAddChild, btnCancel,
          btnSaveParent, etParentEmail, etParentIdNumber, etParentName, etParentPhone,
          recyclerTempChildren);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
