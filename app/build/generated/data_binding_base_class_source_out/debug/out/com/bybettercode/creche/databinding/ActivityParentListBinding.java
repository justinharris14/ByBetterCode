// Generated by view binder compiler. Do not edit!
package com.bybettercode.creche.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bybettercode.creche.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityParentListBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final FloatingActionButton fabAddParent;

  @NonNull
  public final RecyclerView recyclerParents;

  @NonNull
  public final CoordinatorLayout root;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final TextInputEditText searchEdit;

  @NonNull
  public final TextInputLayout searchLayout;

  private ActivityParentListBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout container, @NonNull FloatingActionButton fabAddParent,
      @NonNull RecyclerView recyclerParents, @NonNull CoordinatorLayout root,
      @NonNull Button searchButton, @NonNull TextInputEditText searchEdit,
      @NonNull TextInputLayout searchLayout) {
    this.rootView = rootView;
    this.container = container;
    this.fabAddParent = fabAddParent;
    this.recyclerParents = recyclerParents;
    this.root = root;
    this.searchButton = searchButton;
    this.searchEdit = searchEdit;
    this.searchLayout = searchLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityParentListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityParentListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_parent_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityParentListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.fabAddParent;
      FloatingActionButton fabAddParent = ViewBindings.findChildViewById(rootView, id);
      if (fabAddParent == null) {
        break missingId;
      }

      id = R.id.recyclerParents;
      RecyclerView recyclerParents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerParents == null) {
        break missingId;
      }

      CoordinatorLayout root = (CoordinatorLayout) rootView;

      id = R.id.searchButton;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.searchEdit;
      TextInputEditText searchEdit = ViewBindings.findChildViewById(rootView, id);
      if (searchEdit == null) {
        break missingId;
      }

      id = R.id.searchLayout;
      TextInputLayout searchLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchLayout == null) {
        break missingId;
      }

      return new ActivityParentListBinding((CoordinatorLayout) rootView, container, fabAddParent,
          recyclerParents, root, searchButton, searchEdit, searchLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
